plugins {
    id 'java'
    id 'org.springframework.boot' version '3.2.5'
    id 'io.spring.dependency-management' version '1.1.4'
}

group = 'com.hana'
version = '0.0.1-SNAPSHOT'

java {
    sourceCompatibility = '17'
}

configurations {

    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {

    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'com.mysql:mysql-connector-j'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.3.0'

    // Security
    implementation 'org.springframework.boot:spring-boot-starter-security'
    implementation 'org.springframework.security:spring-security-config'
    implementation 'org.springframework.security:spring-security-web'

    // JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.5'
    runtimeOnly 'io.jsonwebtoken:jjwt-jackson:0.11.5'

    // redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'org.springframework.boot:spring-boot-starter-cache'

    // JPA
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'

    // Message
    implementation group: 'net.nurigo', name: 'javaSDK', version: '2.2'

    // Test
    testImplementation 'org.projectlombok:lombok'
    testAnnotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'org.mockito:mockito-core:4.6.1'

    // JSON
    implementation 'com.googlecode.json-simple:json-simple:1.1.1'

    // Spring Batch
    implementation 'org.springframework.boot:spring-boot-starter-batch'
    testImplementation 'org.springframework.batch:spring-batch-test'

    // OpenAI API 호출을 위한 WebClient
    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'jakarta.annotation:jakarta.annotation-api:2.0.0'

    //gradle
    implementation 'com.google.firebase:firebase-admin:8.0.1'
}

tasks.named('test') {
    useJUnitPlatform()
}

tasks.named('processResources') {
    duplicatesStrategy = DuplicatesStrategy.INCLUDE
    from('src/main/resources') {
        include '**/*.yml'
    }
}

bootJar {
    archiveFileName = 'hanaview.jar'
}